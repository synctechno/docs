# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/manual/git-backup.rst:3
msgid "Traceability of configuration changes using Git"
msgstr ""

#: ../../source/manual/git-backup.rst:5
msgid ""
"When seeking a solution to keep full traceability of configuration "
"changes made by (various) users on your firewall, the git-backup plugin "
"might be a useful addition to your setup."
msgstr ""

#: ../../source/manual/git-backup.rst:8
msgid ""
"In order to use this feature, one has to install the git-backup plugin "
"first (in :menuselection:`System->Firmware->Plugins` search for os-git-"
"backup)."
msgstr ""

#: ../../source/manual/git-backup.rst:17
msgid "Concept"
msgstr ""

#: ../../source/manual/git-backup.rst:19
msgid ""
"Since git backup is a little bit different than the standard backup "
"options available, we will explain briefly how it works using the diagram"
" below."
msgstr ""

#: ../../source/manual/git-backup.rst:46
msgid ""
"When :code:`config.xml` changes happen due to user or api interaction, an"
" event is triggered to which handlers can subscribe (using :doc:`syshook "
"</development/backend/autorun>`). Our git-backup plugin subscribes to "
"these events in order to add the received backups and commits these with "
"information extracted from the received xml file. To prevent the system "
"to lock during backups, we choose this loosely coupled method. Events "
"which are yet unprocessed are being left in the (existing) backup "
"directory."
msgstr ""

#: ../../source/manual/git-backup.rst:54
msgid ""
"Events are processed from the moment the initial backup is configured, "
"when disabling backups, the (local) changelog itself remains active."
msgstr ""

#: ../../source/manual/git-backup.rst:57
msgid ""
"Git backup will push collected commits to the upstream repository "
"nightly. To shorten this default interval, a custom cronjob (see "
":doc:`Settings </manual/settingsmenu#cron>`) can be set up, selecting "
"`Remote Backup` as the Command. The regular backup procedure (which is "
"also being triggered using the test button in the user interface) is "
"responsible for initialising the empty local repository and configuring "
"the upstream target."
msgstr ""

#: ../../source/manual/git-backup.rst:64
msgid ""
"One can always change the upstream target, as long as the newly "
"configured one is either \"bare\" (empty) or containing the exact same "
"content (/change history) as the one used on this firewall."
msgstr ""

#: ../../source/manual/git-backup.rst:69
msgid "Initial setup"
msgstr ""

#: ../../source/manual/git-backup.rst:71
msgid ""
"The configuration part of this plugin is quite basic and offers two types"
" of transport modes, https using a username and password combination or "
"ssh using public key infrastructure."
msgstr ""

#: ../../source/manual/git-backup.rst:77
msgid "Enable"
msgstr ""

#: ../../source/manual/git-backup.rst:77
msgid "Enable backup to the upstream target"
msgstr ""

#: ../../source/manual/git-backup.rst:78
msgid "URL"
msgstr ""

#: ../../source/manual/git-backup.rst:78
msgid ""
"Target location, which defined transport protocol, options as "
"ssh://server/project.git or https://server/project.git are allowed here."
msgstr ""

#: ../../source/manual/git-backup.rst:80
msgid "Branch"
msgstr ""

#: ../../source/manual/git-backup.rst:80
msgid "The branch to push your commits to on the configured url"
msgstr ""

#: ../../source/manual/git-backup.rst:81
msgid "SSH private key"
msgstr ""

#: ../../source/manual/git-backup.rst:81
msgid "When using ssh, make sure to add a private key here"
msgstr ""

#: ../../source/manual/git-backup.rst:82
msgid "User Name"
msgstr ""

#: ../../source/manual/git-backup.rst:82
msgid ""
"Username, when using gitlab and ssh, the default is :code:`git` here "
"(most of these providers use a single user and identify the user by it's "
"key)"
msgstr ""

#: ../../source/manual/git-backup.rst:84
msgid "password"
msgstr ""

#: ../../source/manual/git-backup.rst:84
msgid "When using https authentication, choose a password here."
msgstr ""

#: ../../source/manual/git-backup.rst:87
msgid ""
"Make sure to push to a \"bare\" upstream repository, when pressing "
"\"Setup/Test Git\" the initial commits should be send to your git server."
msgstr ""

#: ../../source/manual/git-backup.rst:93
msgid "Conflict resolution"
msgstr ""

#: ../../source/manual/git-backup.rst:95
msgid ""
"From the user interface no conflict resolution is offered, you need to "
"configure an upstream repository and stick to it for the lifetime of the "
"firewall. When for some reason a backup needs to be restored and one "
"would like to stick to the same git repository, manual conflict "
"resolution might be an option. Support on these scenario's is not "
"offered."
msgstr ""

#: ../../source/manual/git-backup.rst:100
msgid ""
"The repository is available on the OPNsense machine in the following "
"directory :code:`/conf/backup/git`."
msgstr ""

#: ../../source/manual/git-backup.rst:105
msgid ""
"Conflict resolution can complicate the solution a lot (merging, fast-"
"forward, ....), for this reason we will not accept feature requests "
"trying to push to existing (used) repositories."
msgstr ""

#: ../../source/manual/git-backup.rst:111
msgid "Error handling"
msgstr ""

#: ../../source/manual/git-backup.rst:113
msgid ""
"When errors occur these will be written to the normal system logging, "
"search for :code:`git-backup` in the general system logging "
"(:menuselection:`System -> Log Files -> General`)."
msgstr ""

#: ../../source/manual/git-backup.rst:116
msgid ""
"Some standard errors might be returned via the test button, which should "
"provide a clear direction, known ones are:"
msgstr ""

#: ../../source/manual/git-backup.rst:118
msgid ""
"**authentication failure** -> username/password combination is not valid "
"or the provided ssh key doesn't match the expected one"
msgstr ""

#: ../../source/manual/git-backup.rst:119
msgid ""
"**ssh hostkey changed** -> it looks like a man-in-the-middle attack is "
"happening, if that's not the case and the remote identification changed "
"for valid reasons, manual intervention is required (remove the offensive "
"key from :code:`/root/.ssh/known_hosts`)"
msgstr ""

#: ../../source/manual/git-backup.rst:121
msgid ""
"**git out of sync** -> unable to synchronize, see \"Conflict resolution\""
" for additional info."
msgstr ""

#: ../../source/manual/git-backup.rst:126
msgid "Cleanup"
msgstr ""

#: ../../source/manual/git-backup.rst:128
msgid ""
"The repository is saved locally on the firewall in "
":code:`/conf/backup/git`, if for some reason one would like to remove the"
" collected history and start over from scratch, one can safetly remove "
"this directory."
msgstr ""

#: ../../source/manual/git-backup.rst:131
msgid ""
"Login using a (ssh) console and remove the git directory in that case "
"(:code:`rm -rf /conf/backup/git`)"
msgstr ""

#: ../../source/manual/git-backup.rst:136
msgid ""
"As long as the plugin is installed and /conf/backup/git contains a git "
"repository, the changes will be captured (also without an upstream). One "
"could use this knowledge as well to keep a local (only) repository by "
"creating a repository without assigning an upstream and leave the backup "
"option disabled."
msgstr ""

#: ../../source/manual/git-backup.rst:142
msgid ""
"The firewall contains a local backup of the most recent changes "
"(configured in :menuselection:`System -> Configuration -> History`) which"
" the config changed event handler uses to feed to the consumers. If after"
" a cleanup one would like to flush the collected changes again to the "
"upstream provider, the :code:`/conf/event_config_changed.json` could be "
"removed to \"forget\" about the already handled config events (in which "
"case all backups will be signaled again to all config syshook handlers)"
msgstr ""

