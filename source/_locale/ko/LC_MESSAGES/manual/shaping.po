# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/manual/shaping.rst:3
msgid "Traffic Shaping"
msgstr ""

#: ../../source/manual/shaping.rst:4
msgid ""
"Traffic shaping (also known as “packet shaping”) is the control of "
"computer network traffic in order to optimize or guarantee performance, "
"lower latency, and/or increase usable bandwidth by delaying packets that "
"meet certain criteria. More specifically, traffic shaping is any action "
"on a set of packets (often called a stream or a flow), which imposes "
"additional delay on those packets such that they conform to some "
"predetermined constraint (a contract or traffic profile)."
msgstr ""

#: ../../source/manual/shaping.rst:16
msgid "Introduction"
msgstr ""

#: ../../source/manual/shaping.rst:17
msgid ""
"Traffic shaping within OPNsense is very flexible and is organized around "
"pipes, queues and corresponding rules. The pipes define the allowed "
"bandwidth, the queues can be used to set a weight within the pipe and "
"finally the rules are used to apply the shaping to a certain package "
"flow. The shaping rules are handled independently from the firewall rules"
" and other settings."
msgstr ""

#: ../../source/manual/shaping.rst:23
msgid ""
"OPNsense traffic shaping is a reliable solution to limit bandwidth or "
"prioritize traffic and can be combined with other functions such as "
"captive portal or high availability (CARP)."
msgstr ""

#: ../../source/manual/shaping.rst:27
msgid ""
"Bandwidth limitations can be defined based upon the interface(s), IP "
"source & destination, direction of traffic (in/out) and port numbers "
"(application)."
msgstr ""

#: ../../source/manual/shaping.rst:30
msgid ""
"Available bandwidth can be shared evenly over all users, this allows for "
"optimum performance at all times."
msgstr ""

#: ../../source/manual/shaping.rst:33
msgid ""
"Traffic can also be prioritized by adding queues and defining weights. "
"Strictly speaking traffic is not really prioritized but applications with"
" a higher weight can consume more bandwidth than others when the total "
"available bandwidth is limited."
msgstr ""

#: ../../source/manual/shaping.rst:37
msgid ""
"The traffic shaper implementation uses IPFW and dummynet to offer a "
"modern, reliable solution with a low cpu footprint."
msgstr ""

#: ../../source/manual/shaping.rst:42
msgid "Dummynet & ipfw"
msgstr ""

#: ../../source/manual/shaping.rst:44
msgid ""
"Dummynet operates by first using the firewall to classify packets and "
"divide them into flows, using any match pattern that can be used in ipfw "
"rules.  Depending on local policies, a flow can contain packets for a "
"single TCP connection, or from/to a given host, or entire subnet, or a "
"protocol type, etc."
msgstr ""

#: ../../source/manual/shaping.rst:50
msgid ""
"Packets belonging to the same flow are then passed to either of two "
"different objects, which implement the traffic regulation:"
msgstr ""

#: ../../source/manual/shaping.rst:58
msgid "pipe"
msgstr ""

#: ../../source/manual/shaping.rst:54
msgid ""
"A pipe emulates a link with given bandwidth, propagation delay, queue "
"size and packet loss rate.  Packets are queued in front of the pipe as "
"they come out from the classifier, and then transferred to the pipe "
"according to the pipe's parameters."
msgstr ""

#: ../../source/manual/shaping.rst:68
msgid "queue"
msgstr ""

#: ../../source/manual/shaping.rst:61
msgid ""
"A queue is an abstraction used to implement the WF2Q+ (Worstcase Fair "
"Weighted Fair Queueing) policy, which is an efficient variant of the WFQ "
"policy. The queue associates a weight and a reference pipe to each flow, "
"and then all backlogged (i.e., with packets queued) flows linked to the "
"same pipe share the pipe's bandwidth proportionally to their weights. "
"Note that weights are not priorities; a flow with a lower weight is still"
" guaranteed to get its fraction of the bandwidth even if a flow with a "
"higher weight is permanently backlogged."
msgstr ""

#: ../../source/manual/shaping.rst:70
msgid ""
"In practice, pipes can be used to set hard limits to the bandwidth that a"
" flow can use, whereas queues can be used to determine how different flow"
" share the available bandwidth."
msgstr ""

#: ../../source/manual/shaping.rst:74
msgid ""
"The shaping rules can be defined in the rules section of the traffic "
"shaper."
msgstr ""

#: ../../source/manual/shaping.rst:79
msgid "Status / statistics"
msgstr ""

#: ../../source/manual/shaping.rst:81
msgid ""
"To check if your shaper is acting like intended, you can use the status "
"page (:menuselection:`Firewall -> Shaper -> Status`)."
msgstr ""

#: ../../source/manual/shaping.rst:83
msgid ""
"This component will show a breakdown of configured pipes, queues and "
"rules showing the amount of traffic passed through it since the last "
"restart of the service including the timestamp when that happened."
msgstr ""

#: ../../source/manual/shaping.rst:86
msgid ""
"If flows are active, you can show their details using the \"Show active "
"flows\" checkbox, do remember to refresh your view after changing these "
"settings."
msgstr ""

#: ../../source/manual/shaping.rst:89
msgid ""
"The rules are not shown by default, you can use the \"Show rules\" "
"checkbox to enabled those, this option can help you identifying "
"misconfigurations more easily, since the underlaying technology "
"(:code:`ipfw`) keeps track of data on a per rule basis."
msgstr ""

#: ../../source/manual/shaping.rst:95
msgid ""
"Make sure to use easy to find descriptions, these will ease debugging "
"when traffic isn't being handled as expected."
msgstr ""

#: ../../source/manual/shaping.rst:99
msgid "Configuration / How-tos"
msgstr ""

