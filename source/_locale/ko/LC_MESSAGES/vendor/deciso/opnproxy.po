# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/vendor/deciso/opnproxy.rst:3
msgid "Deciso: Proxy access management"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:5
msgid ""
"As part of the OPNsense Business Edition, Deciso offers a plugin to add "
"fine grained access control to your existing web proxy setup."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:8
msgid ""
"One of the features often requested is to easily (dis)allow (groups of) "
"users access to certain domain or url parts, the :code:`OPNProxy` plugin "
"addition offers this functionality at ease."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:12
msgid "Prerequisites"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:14
msgid ""
"Before installing and using this plugin, make sure your web proxy is "
"configured and enabled including some sort of authentication."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:17
msgid ""
"To enable authentication, goto :menuselection:`Services->Web "
"Proxy->Administration` then collapse \"Forward Proxy\" and choose "
"\"Authentication Settings\". Choose a method and apply settings."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:21
msgid ""
"In order for authentication scheme's to work, users do need to exist in "
"the firewall. You can either import them (when using ldap) or make sure "
"the same username exists locally to map groups too."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:26
msgid "Installation"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:28
msgid ""
"Installation of this plugin is rather easy, go to :menuselection:`System "
"--> Firmware --> Plugins` and search for **os-OPNProxy**, use the [+] "
"button to install it."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:31
msgid ""
"Next go to :menuselection:`Services --> Web Proxy --> Access control` to "
"start configuring polcies."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:35
msgid ""
"Redis is required for this plugin to operate, when accessing the access "
"control settings page for the first time you will be pointed to the "
"correct setting to enable it directly. (just enable and apply should be "
"enough)"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:39
msgid "General"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:41
msgid ""
"In order to utilise user/group based policies, the proxy needs to be able"
" to inspect the traffic and know the identity of the user."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:44
msgid ""
"Since most of the internet is being encrypted nowadays, you would need to"
" enable some sort of ssl inspection in between. When setting \"Enable SSL"
" inspection\" in :menuselection:`Services -> Webproxy -> Administration "
"-> Forward Proxy` you are able to use a \"man-in-the-middle\" approach "
"(where the proxy intercepts traffic and is able to filter it). A "
"disadvantage of this option is that your clients would need to trust the "
"firewalls certificate (CA selected in \"CA to use\"). When enabled full "
"paths can be filtered."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:50
msgid ""
"A bit lighter option would be to use SSL inspection with \"Log SNI "
"information only\" enabled, in which case the firewall would know which "
"domain you are trying to visit, but can not inspect the content of the "
"request (or response for that matter)."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:55
msgid ""
"When enabling \"Log SNI information only\", only domain based policies "
"will be usable for SSL/TLS based requests."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:57
msgid ""
"The standard authentication options available in OPNsense apply, which "
"can be configured in :menuselection:`Services -> Webproxy -> "
"Administration -> Forward Proxy -> Authentication settings`. Please make "
"sure to import/add the users in OPNsense in order to user their "
"authorisation settings (existence and group membership)."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:64
msgid ""
"Standard (global) policies take precedence over the ones defined in the "
"access control plugin, this includes \"SSL no bump sites\" when full "
"TLS/SSL inspection is used. (it's not possible to block no bump sites in "
"full inspection mode)"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:70
msgid "Policy types"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:72
msgid ""
"Part of OPNproxy is a standard list of categorized locations, which can "
"be easily added to a policy, these type of policies are the default ones."
" You will find categories here like :code:`adult`, "
":code:`advertisements`, :code:`malware` and many others."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:75
msgid ""
"In some cases however our defaults are not enough, for this reason we "
"also offer the posibility to push your own list of domains and locations "
"into a custom policy."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:78
msgid ""
"Every policy contains what to match (either a standard category or a list"
" of domains and paths), what to do (allow or deny) and an audience (the "
"users and/or groups the policy applies to)."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:81
msgid ""
"Since both users and groups can be selected within the same policy, we "
"choose to prefix users with a :code:`*`."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:87
msgid ""
"Prioritisation within our access control is quite easy and should cover "
"all possible scenarios, below the order in which decisions are made:"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:90
msgid ""
"No policy, default allow. When authentication is properly setup, this "
"means that access depends on supplying valid credentials."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:91
msgid ""
"Explicit allow, the closest matching policy (see text below) returns "
"accept, access will be granted (also when another policy returns deny)"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:92
msgid ""
"Explicit deny, the closest matching policy returns deny, access will be "
"denied"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:96
msgid "Closest matching explained"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:98
msgid ""
"One of the key features of our access control system is a method to find "
"the best suitable policy for the requested domain or url."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:101
msgid ""
"This means that if someone defines two ACL's one denying access to all "
"google.nl subdomains (:code:`.google.nl`) and one allowing access to the "
"favicon on the page :code:`www.google.nl/favicon.ico`, only access to "
"favicon.ico is allowed on the google.nl website."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:105
msgid ""
"If one of our default policies contains a website you still want to "
"allow, you can easily add the domain (with or without path) to another "
"policy to still grant access. This is one of the main reasons we "
"prioritise :code:`allow` over :code:`deny` in these policies."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:111
msgid "Custom policies"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:113
msgid ""
"Custom policies are defined as lists of domains with optional paths using"
" one line per item. When domain policies should include subdomains, they "
"should be prefixed with a point (.), e.g. :code:`.nl` matches all dutch "
"top level domains."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:117
msgid ""
"Some companies use very strict policies, in which case one should only be"
" allowed to access specific domains. For this case we added a special "
"wildcard (:code:`*`). When set in a policy it will mark the absolute top "
"level domain."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:122
msgid ""
"If one should only be allowed to access pkg.opnsense.org you would create"
" two policies, one containing a deny policy on :code:`*` and one "
"containing an allow policy on :code:`pkg.opnsense.org`."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:127
msgid "Using the policy tester"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:129
msgid ""
"When doubting if a specific location would be accessible by a user, one "
"can always use the included ACL tester. Although mainly used for "
"debugging purposes, it will easily inform you about the decision the "
"webproxy will take when using our acl's."
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:133
msgid ""
"The policy tester contains two fields and a test button, just enter a "
"username followed by a url (e.g. https://www.google.nl/) and hit the test"
" button. Depending on settings it will return a response like:"
msgstr ""

#: ../../source/vendor/deciso/opnproxy.rst:163
msgid ""
"Which informs you about all settings relevant for the lookup, the message"
" returned (to squid), the user found and the policy matched using the "
"rules described earlier."
msgstr ""

