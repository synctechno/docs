# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/development/how-tos/api.rst:3
msgid "Use the API"
msgstr ""

#: ../../source/development/how-tos/api.rst:7
msgid "Overview"
msgstr ""

#: ../../source/development/how-tos/api.rst:9
msgid ""
"All components that are using the full architecture of OPNsense "
"automatically receive API capabilities, for this simple tutorial we use "
"the firmware module but others will function in the same way. API access "
"is part of the local user authentication system, but uses key/secret "
"pairs to separate account information from machine to machine "
"communication. Secrets are not stored on OPNsense and can be downloaded "
"only once, if lost, a new key has to be generated for your application."
msgstr ""

#: ../../source/development/how-tos/api.rst:17
msgid ""
"A user can have multiple keys, our advice is to create a unique key for "
"every application in use."
msgstr ""

#: ../../source/development/how-tos/api.rst:22
msgid "Creating keys"
msgstr ""

#: ../../source/development/how-tos/api.rst:24
msgid ""
"API keys are managed in the user manager (system\\_usermanager.php), go "
"to the user manager page and select a user. Somewhere down the page you "
"will find the API section for this user."
msgstr ""

#: ../../source/development/how-tos/api.rst:28
msgid "|Usermanager add api key.png|"
msgstr ""

#: ../../source/development/how-tos/api.rst:118
msgid "Usermanager add api key.png"
msgstr ""

#: ../../source/development/how-tos/api.rst:30
msgid ""
"Click on the + sign to add a new key. When the key is created, you will "
"receive a (single download) with the credentials in one text file (ini "
"formatted). The contents of this file look like this:"
msgstr ""

#: ../../source/development/how-tos/api.rst:41
msgid "Code sample (python)"
msgstr ""

#: ../../source/development/how-tos/api.rst:43
msgid ""
"For the python code sample we use the nice \"requests\" library "
"(http://docs.python-requests.org/en/latest/), which makes HTTP calls very"
" easy."
msgstr ""

#: ../../source/development/how-tos/api.rst:47
msgid ""
"Before you can start, make sure your OPNsense has a valid SSL certificate"
" (or choose to ignore it for testing purposes by setting verify=False), "
"don't forget to verify that the selected user may access the firmware "
"page."
msgstr ""

#: ../../source/development/how-tos/api.rst:52
msgid ""
"The web interface uses the same logic that will be available for the api,"
" in this example we will collect some status information from the "
"firmware module and print it out for the user."
msgstr ""

#: ../../source/development/how-tos/api.rst:56
msgid ""
"It all starts with creating the request and waiting for the response, all"
" data interaction is using json format, both for the responses as for the"
" request data (when sending POST data)."
msgstr ""

#: ../../source/development/how-tos/api.rst:60
msgid ""
"First step of the example is importing the required libraries, then "
"define the endpoint url and credentials to use and finally fire the (get "
"type) request. As soon as we receive the response, we parse the json "
"string back to a dictionary and print some data depending on the "
"response."
msgstr ""

#: ../../source/development/how-tos/api.rst:100
msgid "Using curl"
msgstr ""

#: ../../source/development/how-tos/api.rst:102
msgid ""
"Simple testing with curl is also possible, the sample below uses the same"
" credentials, but ignores the SSL certificate check (-k) for testing."
msgstr ""

#: ../../source/development/how-tos/api.rst:111
msgid "And schedule the actual update of all packages using:"
msgstr ""

