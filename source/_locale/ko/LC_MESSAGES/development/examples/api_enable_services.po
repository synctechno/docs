# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/development/examples/api_enable_services.rst:3
msgid "API enable standard services"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:5
msgid ""
"OPNsense contains a simple wrapper which handles standard service actions"
" like starting and stopping services. For this example, we assume the "
"HelloWorld example is created and the model exists."
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:9
msgid "Prerequisites"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:11
msgid ""
"The HelloWorld example forms the basis for this one, please make sure you"
" read and try it first before starting with this one."
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:16
msgid "Configd actions"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:19
msgid ""
"Since the example didn't contain a service, we're going to extend the "
"configd template first. Edit "
":code:`/usr/local/opnsense/service/conf/actions.d/actions_helloworld.conf`"
" and expand with the following sections:"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:54
msgid ""
"Next restart configd using :code:`service configd restart` and test these"
" new calls using the following commands"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:68
msgid ""
"Our template only simulates a service, it doesn't actually do anything "
"(:code:`exit 0`)."
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:71
msgid "Update the service controller"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:74
msgid ""
"Next we change the existing controller to use "
":code:`ApiMutableServiceControllerBase`, which links the existing model "
"to the service callouts defined. The :code:`testAction` used in the "
"HelloWorld example is left out to avoid confusion."
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:77
msgid "/usr/local/opnsense/mvc/app/controllers/OPNsense/HelloWorld/Api/ServiceController.php"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:96
msgid "The  service above defines the following static variables:"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:98
msgid "$internalServiceClass"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:99
msgid ""
"reference the model class, which is used to determine if this service is "
"enabled (links the model to the service)"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:100
msgid "$internalServiceTemplate"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:101
msgid ""
"before starting the service it will call configd to generate "
"configuration data, in this case it would execute the equivalent of "
":code:`configctl template reload OPNsense/HelloWorld` on the console"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:102
msgid "$internalServiceEnabled"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:103
msgid ""
"Which section of the model contains a boolean defining if the service is "
"enabled (general.enabled)"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:106
msgid "$internalServiceName"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:105
msgid ""
"refers to the action template, where it can find "
"start/stop/restart/status/reload actions (actions_helloworld.conf)"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:108
msgid ""
"The :code:`reconfigureForceRestart` overwrite tells the controller if it "
"should always stop the service before trying a start, some services can "
"be signaled to do a reconfigure without stopping."
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:113
msgid "Endpoints"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:115
msgid ""
"When deploying this controller into the HelloWorld module it would expose"
" the following endpoints"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "Method"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "Endpoint"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "``POST``"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "/api/helloworld/service/stop"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "/api/helloworld/service/start"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "/api/helloworld/service/restart"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "/api/helloworld/service/reconfigure"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "``GET``"
msgstr ""

#: ../../source/development/examples/api_enable_services.rst:1
msgid "/api/helloworld/service/status"
msgstr ""

