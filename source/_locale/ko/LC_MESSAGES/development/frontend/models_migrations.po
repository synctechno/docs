# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/development/frontend/models_migrations.rst:3
msgid "Migrations"
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:5
msgid ""
"When using the :code:`<version/>` tag in the model xml you automatically "
"allow upgrades of your configuration data. If the tag is missing, it will"
" automatically assume your at version :code:`0.0.0` (initial version)."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:8
msgid ""
"The migration feature provides a pluggable framework to offer new and "
"changed attributes after installation of new software and is therefor "
"automatically triggered when performing upgrades or installing packages."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:13
msgid ""
"You can always trigger migrations manually by executing "
":code:`/usr/local/opnsense/mvc/script/run_migrations.php` from a console."
" This will output all installed modules and the upgrades performed."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:17
msgid ""
"If no overrides are provided and the module version of the running "
"configuration doesn't equal the one installed, there automatically will "
"be a migration created using the :code:`BaseModelMigration` base class. "
"This will take care of basic changes, such as adding new fields and "
"applying defaults."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:23
msgid ""
"The current version will always be saved as an attirbute on the model xml"
" (e.g. :code:`<Alias version=\"1.0.0\">`)"
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:28
msgid "Custom migrations"
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:30
msgid ""
"In some cases one wants to perform custom actions when upgrading between "
"version, such as gathering data from legacy configuration settings."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:34
msgid ""
"The directory :code:`Migrations` in the model directory is used to hold "
"the migration code on a per version basis. By default classes (and files)"
" in there use the following naming scheme: :code:`M1_0_0` which stands "
"for [M]igration version [1.0.0]."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:39
msgid ""
"If different models share a namespace, you can change the prefix of the "
"migration files, when nothing is provided the default is **M**, the tag "
":code:`<migration_prefix/>` can be used to change this to something else."
" (e.g. :code:`<migration_prefix>MFP</migration_prefix>`)"
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:42
msgid ""
"The boilerplate for a model migration looks like this (for a migration to"
" 1.0.0):"
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:68
msgid ""
"It contains two methods, :code:`run()` and :code:`post()`. The first one "
"is executed in memory, before serializing data back to the running "
"configuration and for all version steps in sequence. (an upgrade from "
"1.0.0 to 1.0.2 might execute 1.0.1, 1.0.2, 1.0.3). The configuration data"
" itself will be synced ones in this case."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:73
msgid ""
"The post action is called after normal model configuration and can "
"sometimes be practical to alter the raw model xml, for example if model "
"versions require a move of datasets, without actually changing content."
msgstr ""

#: ../../source/development/frontend/models_migrations.rst:79
msgid ""
"Although there are toggles in place, data migration can easily lead to "
"race conditions. Always try to design your software for change, adding "
"fields which pass validation by default for example is always preferred "
"above situations which will fail by default."
msgstr ""

