# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, Deciso B.V
# This file is distributed under the same license as the OPNsense package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OPNsense Wiki & Documentation<br/><small>351a8e2\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-14 13:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/development/guidelines/psr12.rst:3
msgid "PSR-12 Coding Style Guide"
msgstr ""

#: ../../source/development/guidelines/psr12.rst
msgid ""
"The PSR1, PSR2 and PSR12 Coding Standards are provided by FIG under a MIT"
" license."
msgstr ""

#: ../../source/development/guidelines/psr12.rst
msgid "See license details: http://www.php-fig.org/bylaws/licensing-policies/"
msgstr ""

#: ../../source/development/guidelines/psr12.rst
msgid ""
"The original content of this page can be found at `php-fig <http://www"
".php-fig.org/psr/psr-12/>`__"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:15
msgid "1. Overview"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:17
msgid ""
"This specification extends, expands and replaces `PSR-2 "
"<https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2"
"-coding-style-guide.md>`__, the coding style guide and requires adherence"
" to `PSR-1 <https://github.com/php-fig/fig-"
"standards/blob/master/accepted/PSR-1-basic-coding-standard.md>`__, the "
"basic coding standard."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:21
msgid ""
"Like PSR-2, the intent of this specification is to reduce cognitive "
"friction when scanning code from different authors. It does so by "
"enumerating a shared set of rules and expectations about how to format "
"PHP code. This PSR seeks to provide a set way that coding style tools can"
" implement, projects can declare adherence to and developers can easily "
"relate to between different projects. When various authors collaborate "
"across multiple projects, it helps to have one set of guidelines to be "
"used among all those projects. Thus, the benefit of this guide is not in "
"the rules themselves but the sharing of those rules."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:28
msgid ""
"PSR-2 was accepted in 2012 and since then a number of changes have been "
"made to PHP which has implications for coding style guidelines. Whilst "
"PSR-2 is very comprehensive of PHP functionality that existed at the time"
" of writing, new functionality is very open to interpretation. This PSR, "
"therefore, seeks to clarify the content of PSR-2 in a more modern context"
" with new functionality available, and make the errata to PSR-2 binding."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:34
msgid "Previous language versions"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:36
msgid ""
"Throughout this document, any instructions MAY be ignored if they do not "
"exist in versions of PHP supported by your project."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:40
msgid "Example"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:42
msgid "This example encompasses some of the rules below as a quick overview:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:80
msgid "2. General"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:83
msgid "2.1 Basic Coding Standard"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:84
msgid "Code MUST follow all rules outlined in PSR-1."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:86
msgid ""
"The term 'StudlyCaps' in PSR-1 MUST be interpreted as PascalCase where "
"the first letter of each word is capitalized including the very first "
"letter."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:91
msgid "2.2 Files"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:93
msgid ""
"All PHP files MUST use the Unix LF (linefeed) line ending. All PHP files "
"MUST end with a single blank line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:96
msgid "The closing ``?>`` tag MUST be omitted from files containing only PHP."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:99
msgid "2.3 Lines"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:101
msgid "There MUST NOT be a hard limit on line length."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:103
msgid "The soft limit on line length MUST be 120 characters."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:105
msgid ""
"Lines SHOULD NOT be longer than 80 characters; lines longer than that "
"SHOULD be split into multiple subsequent lines of no more than 80 "
"characters each."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:108
msgid "There MUST NOT be trailing whitespace at the end of lines."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:110
msgid ""
"Blank lines MAY be added to improve readability and to indicate related "
"blocks of code except where explicitly forbidden."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:113
msgid "There MUST NOT be more than one statement per line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:117
msgid "2.4 Indenting"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:119
msgid ""
"Code MUST use an indent of 4 spaces for each indent level, and MUST NOT "
"use tabs for indenting."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:124
msgid "2.5 Keywords and Types"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:126
msgid ""
"All PHP reserved `keywords "
"<http://php.net/manual/en/reserved.keywords.php>`__ and `types "
"<http://php.net/manual/en/reserved.types.php>`__ MUST be in lower case."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:128
msgid ""
"Any new types and keywords added to future PHP versions MUST be in lower "
"case."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:130
msgid ""
"Short form of type keywords MUST be used i.e. `bool` instead of "
"`boolean`, `int` instead of `integer` etc."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:136
msgid "3. Declare Statements, Namespace, and Import Statements"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:138
msgid ""
"The header of a PHP file may consist of a number of different blocks. If "
"present, each of the blocks below MUST be separated by a single blank "
"line, and MUST NOT contain a blank line. Each block MUST be in the order "
"listed below, although blocks that are not relevant may be omitted."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:143
msgid "Opening :code:`<?php` tag."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:144
msgid "File-level docblock."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:145
msgid "One or more declare statements."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:146
msgid "The namespace declaration of the file."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:147
msgid "One or more class-based `use` import statements."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:148
msgid "One or more function-based `use` import statements."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:149
msgid "One or more constant-based `use` import statements."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:150
msgid "The remainder of the code in the file."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:152
msgid ""
"When a file contains a mix of HTML and PHP, any of the above sections may"
" still be used. If so, they MUST be present at the top of the file, even "
"if the remainder of the code consists of a closing PHP tag and then a "
"mixture of HTML and PHP."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:157
msgid ""
"When the opening `<?php` tag is on the first line of the file, it MUST be"
" on its own line with no other statements unless it is a file containing "
"markup outside of PHP opening and closing tags."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:161
msgid ""
"Import statements MUST never begin with a leading backslash as they must "
"always be fully qualified."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:164
msgid "The following example illustrates a complete list of all blocks:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:197
msgid ""
"Compound namespaces with a depth of more than two MUST NOT be used. "
"Therefore the following is the maximum compounding depth allowed:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:211
msgid "And the following would not be allowed:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:223
msgid ""
"When wishing to declare strict types in files containing markup outside "
"PHP opening and closing tags, the declaration MUST be on the first line "
"of the file and include an opening PHP tag, the strict types declaration "
"and closing tag."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:227
msgid "For example:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:240
msgid ""
"Declare statements MUST contain no spaces and MUST be exactly "
"`declare(strict_types=1)` (with an optional semi-colon terminator)."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:243
msgid ""
"Block declare statements are allowed and MUST be formatted as below. Note"
" position of braces and spacing:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:256
msgid "4. Classes, Properties, and Methods"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:259
msgid "The term \"class\" refers to all classes, interfaces, and traits."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:261
msgid ""
"Any closing brace MUST NOT be followed by any comment or statement on the"
" same line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:264
msgid ""
"When instantiating a new class, parentheses MUST always be present even "
"when there are no arguments passed to the constructor."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:273
msgid "4.1 Extends and Implements"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:275
msgid ""
"The `extends` and `implements` keywords MUST be declared on the same line"
" as the class name."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:278
msgid ""
"The opening brace for the class MUST go on its own line; the closing "
"brace for the class MUST go on the next line after the body."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:281
msgid ""
"Opening braces MUST be on their own line and MUST NOT be preceded or "
"followed by a blank line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:284
msgid ""
"Closing braces MUST be on their own line and MUST NOT be preceded by a "
"blank line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:302
msgid ""
"Lists of `implements` and, in the case of interfaces, `extends` MAY be "
"split across multiple lines, where each subsequent line is indented once."
" When doing so, the first item in the list MUST be on the next line, and "
"there MUST be only one interface per line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:327
msgid "4.2 Using traits"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:328
msgid ""
"The `use` keyword used inside the classes to implement traits MUST be "
"declared on the next line after the opening brace."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:345
msgid ""
"Each individual trait that is imported into a class MUST be included one-"
"per-line and each inclusion MUST have its own `use` import statement."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:366
msgid ""
"When the class has nothing after the `use` import statement, the class "
"closing brace MUST be on the next line after the `use` import statement."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:383
msgid "Otherwise, it MUST have a blank line after the `use` import statement."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:401
msgid ""
"When using the `insteadof` and `as` operators they must be used as "
"follows taking note of indentation, spacing, and new lines."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:422
msgid "4.3 Properties and Constants"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:424
msgid "Visibility MUST be declared on all properties."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:426
msgid ""
"Visibility MUST be declared on all constants if your project PHP minimum "
"version supports constant visibilities (PHP 7.1 or later)."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:429
msgid "The `var` keyword MUST NOT be used to declare a property."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:431
msgid "There MUST NOT be more than one property declared per statement."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:433
msgid ""
"Property names MUST NOT be prefixed with a single underscore to indicate "
"protected or private visibility. That is, an underscore prefix explicitly"
" has no meaning."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:437
msgid "There MUST be a space between type declaration and property name."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:439
msgid "A property declaration looks like the following:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:454
msgid "4.4 Methods and Functions"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:456
msgid "Visibility MUST be declared on all methods."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:458
msgid ""
"Method names MUST NOT be prefixed with a single underscore to indicate "
"protected or private visibility. That is, an underscore prefix explicitly"
" has no meaning."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:462
msgid ""
"Method and function names MUST NOT be declared with space after the "
"method name. The opening brace MUST go on its own line, and the closing "
"brace MUST go on the next line following the body. There MUST NOT be a "
"space after the opening parenthesis, and there MUST NOT be a space before"
" the closing parenthesis."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:467
msgid ""
"A method declaration looks like the following. Note the placement of "
"parentheses, commas, spaces, and braces:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:484
msgid ""
"A function declaration looks like the following. Note the placement of "
"parentheses, commas, spaces, and braces:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:498
msgid "4.5 Method and Function Arguments"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:500
msgid ""
"In the argument list, there MUST NOT be a space before each comma, and "
"there MUST be one space after each comma."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:503
msgid ""
"Method and function arguments with default values MUST go at the end of "
"the argument list."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:521
msgid ""
"Argument lists MAY be split across multiple lines, where each subsequent "
"line is indented once. When doing so, the first item in the list MUST be "
"on the next line, and there MUST be only one argument per line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:525
msgid ""
"When the argument list is split across multiple lines, the closing "
"parenthesis and opening brace MUST be placed together on their own line "
"with one space between them."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:547
msgid ""
"When you have a return type declaration present, there MUST be one space "
"after the colon followed by the type declaration. The colon and "
"declaration MUST be on the same line as the argument list closing "
"parenthesis with no spaces between the two characters."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:577
msgid ""
"In nullable type declarations, there MUST NOT be a space between the "
"question mark and the type."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:597
msgid ""
"When using the reference operator `&` before an argument, there MUST NOT "
"be a space after it, like in the previous example."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:600
msgid ""
"There MUST NOT be a space between the variadic three dot operator and the"
" argument name:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:611
msgid ""
"When combining both the reference operator and the variadic three dot "
"operator, there MUST NOT be any space between the two of them:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:623
msgid "4.6 `abstract`, `final`, and `static`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:625
msgid ""
"When present, the `abstract` and `final` declarations MUST precede the "
"visibility declaration."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:628
msgid ""
"When present, the `static` declaration MUST come after the visibility "
"declaration."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:651
msgid "4.7 Method and Function Calls"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:653
msgid ""
"When making a method or function call, there MUST NOT be a space between "
"the method or function name and the opening parenthesis, there MUST NOT "
"be a space after the opening parenthesis, and there MUST NOT be a space "
"before the closing parenthesis. In the argument list, there MUST NOT be a"
" space before each comma, and there MUST be one space after each comma."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:668
msgid ""
"Argument lists MAY be split across multiple lines, where each subsequent "
"line is indented once. When doing so, the first item in the list MUST be "
"on the next line, and there MUST be only one argument per line. A single "
"argument being split across multiple lines (as might be the case with an "
"anonymous function or array) does not constitute splitting the argument "
"list itself."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:698
msgid "5. Control Structures"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:700
msgid "The general style rules for control structures are as follows:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:702
msgid "There MUST be one space after the control structure keyword"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:703
msgid "There MUST NOT be a space after the opening parenthesis"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:704
msgid "There MUST NOT be a space before the closing parenthesis"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:705
msgid ""
"There MUST be one space between the closing parenthesis and the opening "
"brace"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:707
msgid "The structure body MUST be indented once"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:708
msgid "The body MUST be on the next line after the opening brace"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:709
msgid "The closing brace MUST be on the next line after the body"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:711
msgid ""
"The body of each structure MUST be enclosed by braces. This standardizes "
"how the structures look and reduces the likelihood of introducing errors "
"as new lines get added to the body."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:716
msgid "5.1 `if`, `elseif`, `else`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:718
msgid ""
"An `if` structure looks like the following. Note the placement of "
"parentheses, spaces, and braces; and that `else` and `elseif` are on the "
"same line as the closing brace from the earlier body."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:735
msgid ""
"The keyword `elseif` SHOULD be used instead of `else if` so that all "
"control keywords look like single words."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:738
#: ../../source/development/guidelines/psr12.rst:793
#: ../../source/development/guidelines/psr12.rst:827
msgid ""
"Expressions in parentheses MAY be split across multiple lines, where each"
" subsequent line is indented at least once. When doing so, the first "
"condition MUST be on the next line. The closing parenthesis and opening "
"brace MUST be placed together on their own line with one space between "
"them. Boolean operators between conditions MUST always be at the "
"beginning or at the end of the line, not a mix of both."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:763
msgid "5.2 `switch`, `case`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:765
msgid ""
"A `switch` structure looks like the following. Note the placement of "
"parentheses, spaces, and braces. The `case` statement MUST be indented "
"once from `switch`, and the `break` keyword (or other terminating "
"keywords) MUST be indented at the same level as the `case` body. There "
"MUST be a comment such as `// no break` when fall-through is intentional "
"in a non-empty `case` body."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:813
msgid "5.3 `while`, `do while`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:815
msgid ""
"A `while` statement looks like the following. Note the placement of "
"parentheses, spaces, and braces."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:846
msgid ""
"Similarly, a `do while` statement looks like the following. Note the "
"placement of parentheses, spaces, and braces."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:858
msgid ""
"Expressions in parentheses MAY be split across multiple lines, where each"
" subsequent line is indented at least once. When doing so, the first "
"condition MUST be on the next line. Boolean operators between conditions "
"MUST always be at the beginning or at the end of the line, not a mix of "
"both."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:876
msgid "5.4 `for`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:878
msgid ""
"A `for` statement looks like the following. Note the placement of "
"parentheses, spaces, and braces."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:890
msgid ""
"Expressions in parentheses MAY be split across multiple lines, where each"
" subsequent line is indented at least once. When doing so, the first "
"expression MUST be on the next line. The closing parenthesis and opening "
"brace MUST be placed together on their own line with one space between "
"them."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:909
msgid "5.5 `foreach`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:911
msgid ""
"A `foreach` statement looks like the following. Note the placement of "
"parentheses, spaces, and braces."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:924
msgid "5.6 `try`, `catch`, `finally`"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:926
msgid ""
"A `try-catch-finally` block looks like the following. Note the placement "
"of parentheses, spaces, and braces."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:945
msgid "6. Operators"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:947
msgid ""
"Style rules for operators are grouped by arity (the number of operands "
"they take)."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:949
msgid ""
"When space is permitted around an operator, multiple spaces MAY be used "
"for readability purposes."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:952
msgid "All operators not described here are left undefined."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:955
msgid "6.1. Unary operators"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:957
msgid ""
"The increment/decrement operators MUST NOT have any space between the "
"operator and operand."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:966
msgid "Type casting operators MUST NOT have any space within the parentheses:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:974
msgid "6.2. Binary operators"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:976
msgid ""
"All binary [arithmetic][], [comparison][], [assignment][], [bitwise][], "
"[logical][], [string][], and [type][] operators MUST be preceded and "
"followed by at least one space:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:990
msgid "6.3. Ternary operators"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:992
msgid ""
"The conditional operator, also known simply as the ternary operator, MUST"
" be preceded and followed by at least one space around both the `?` and "
"`:` characters:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1001
msgid ""
"When the middle operand of the conditional operator is omitted, the "
"operator MUST follow the same style rules as other binary [comparison][] "
"operators:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1010
msgid "7. Closures"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1012
msgid ""
"Closures MUST be declared with a space after the `function` keyword, and "
"a space before and after the `use` keyword."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1015
msgid ""
"The opening brace MUST go on the same line, and the closing brace MUST go"
" on the next line following the body."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1018
msgid ""
"There MUST NOT be a space after the opening parenthesis of the argument "
"list or variable list, and there MUST NOT be a space before the closing "
"parenthesis of the argument list or variable list."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1022
msgid ""
"In the argument list and variable list, there MUST NOT be a space before "
"each comma, and there MUST be one space after each comma."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1025
msgid ""
"Closure arguments with default values MUST go at the end of the argument "
"list."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1028
msgid ""
"If a return type is present, it MUST follow the same rules as with normal"
" functions and methods; if the `use` keyword is present, the colon MUST "
"follow the `use` list closing parentheses with no spaces between the two "
"characters."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1032
msgid ""
"A closure declaration looks like the following. Note the placement of "
"parentheses, commas, spaces, and braces:"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1052
msgid ""
"Argument lists and variable lists MAY be split across multiple lines, "
"where each subsequent line is indented once. When doing so, the first "
"item in the list MUST be on the next line, and there MUST be only one "
"argument or variable per line."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1057
msgid ""
"When the ending list (whether of arguments or variables) is split across "
"multiple lines, the closing parenthesis and opening brace MUST be placed "
"together on their own line with one space between them."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1061
msgid ""
"The following are examples of closures with and without argument lists "
"and variable lists split across multiple lines."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1113
msgid ""
"Note that the formatting rules also apply when the closure is used "
"directly in a function or method call as an argument."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1130
msgid "8. Anonymous Classes"
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1132
msgid ""
"Anonymous Classes MUST follow the same guidelines and principles as "
"closures in the above section."
msgstr ""

#: ../../source/development/guidelines/psr12.rst:1142
msgid ""
"The opening brace MAY be on the same line as the `class` keyword so long "
"as the list of `implements` interfaces does not wrap. If the list of "
"interfaces wraps, the brace MUST be placed on the line immediately "
"following the last interface."
msgstr ""

